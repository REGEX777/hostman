<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Upload</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <style>
        .dropzone {
            border: 2px dashed #4A5568;
            border-radius: 0.5rem;
        }
        .dropzone.dragging {
            border-color: #2D3748;
        }
        .thumbnail {
            position: relative;
            display: inline-block;
            margin: 10px;
        }
        .thumbnail img {
            border-radius: 0.5rem;
            max-width: 150px;
            max-height: 150px;
        }
        .remove-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background: rgba(255, 255, 255, 0.8);
            border: none;
            border-radius: 50%;
            cursor: pointer;
        }
        #progressContainer {
            margin-top: 20px;
        }
        #progressBar {
            background-color: #4A5568;
            height: 1rem;
            border-radius: 0.5rem;
            transition: width 0.4s ease;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <div class="bg-white p-8 rounded-lg shadow-lg w-full max-w-2xl">
        <h2 class="text-2xl font-bold mb-6 text-center">Upload Images</h2>
        <div id="progressContainer" class="hidden">
            <div class="w-full bg-gray-200 rounded-full">
                <div id="progressBar" class="text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-full" style="width: 0%">0%</div>
            </div>
        </div>
        <form id="uploadForm" action="/upload" method="POST" enctype="multipart/form-data" class="space-y-6">
            <div id="dropzone" class="dropzone p-6 flex items-center justify-center text-gray-600">
                <span>Drag & Drop your images here or click to select</span>
                <input type="file" name="files" id="fileInput" accept="image/*" multiple class="hidden">
            </div>
            <div id="previewContainer" class="hidden mt-4">
                <div id="thumbnails" class="flex flex-wrap"></div>
            </div>
            <button type="submit" class="w-full bg-indigo-600 text-white py-2 rounded-lg hover:bg-indigo-700">Upload</button>
        </form>
    </div>

    <script>
        const dropzone = document.getElementById('dropzone');
        const fileInput = document.getElementById('fileInput');
        const uploadForm = document.getElementById('uploadForm');
        const previewContainer = document.getElementById('previewContainer');
        const thumbnails = document.getElementById('thumbnails');
        const progressContainer = document.getElementById('progressContainer');
        const progressBar = document.getElementById('progressBar');

        dropzone.addEventListener('dragover', (e) => {
            e.preventDefault();
            dropzone.classList.add('dragging');
        });

        dropzone.addEventListener('dragleave', () => {
            dropzone.classList.remove('dragging');
        });

        dropzone.addEventListener('drop', (e) => {
            e.preventDefault();
            dropzone.classList.remove('dragging');
            const files = e.dataTransfer.files;
            if (files.length > 0) {
                handleFiles(files);
            }
        });

        dropzone.addEventListener('click', () => {
            fileInput.click();
        });

        fileInput.addEventListener('change', () => {
            if (fileInput.files.length > 0) {
                handleFiles(fileInput.files);
            }
        });

        function handleFiles(files) {
            previewContainer.classList.remove('hidden');
            for (const file of files) {
                const reader = new FileReader();
                reader.onload = (e) => {
                    const thumbnail = document.createElement('div');
                    thumbnail.classList.add('thumbnail');
                    thumbnail.innerHTML = `
                        <img src="${e.target.result}" alt="Image Preview" />
                        <button class="remove-btn" data-file="${file.name}">
                            <i class="fas fa-times"></i>
                        </button>
                        <p class="text-gray-600 mt-2">${file.name}</p>
                        <p class="text-gray-600 mt-2">Size: ${(file.size / 1024).toFixed(2)} KB</p>
                    `;
                    thumbnails.appendChild(thumbnail);
                };
                reader.readAsDataURL(file);
            }
        }

        thumbnails.addEventListener('click', (e) => {
            if (e.target.closest('.remove-btn')) {
                const fileName = e.target.closest('.remove-btn').getAttribute('data-file');
                const thumbnail = e.target.closest('.thumbnail');
                thumbnail.remove();
                const filesArray = Array.from(fileInput.files);
                const filteredFiles = filesArray.filter(file => file.name !== fileName);
                const dataTransfer = new DataTransfer();
                filteredFiles.forEach(file => dataTransfer.items.add(file));
                fileInput.files = dataTransfer.files;
            }
        });

        uploadForm.addEventListener('submit', (e) => {
            e.preventDefault();

            const formData = new FormData(uploadForm);
            const xhr = new XMLHttpRequest();

            xhr.open('POST', '/upload', true);

            xhr.upload.onprogress = (e) => {
                if (e.lengthComputable) {
                    const percentComplete = (e.loaded / e.total) * 100;
                    progressBar.style.width = percentComplete + '%';
                    progressBar.textContent = Math.round(percentComplete) + '%';
                }
            };

            xhr.onload = () => {
                if (xhr.status === 200) {
                    alert('Upload successful!');
                    progressContainer.classList.add('hidden');
                    previewContainer.classList.add('hidden');
                    thumbnails.innerHTML = '';
                    fileInput.value = '';
                } else {
                    alert('Upload failed.');
                }
            };

            xhr.onerror = () => {
                alert('Upload failed.');
            };

            progressContainer.classList.remove('hidden');
            xhr.send(formData);
        });
    </script>
</body>
</html>
